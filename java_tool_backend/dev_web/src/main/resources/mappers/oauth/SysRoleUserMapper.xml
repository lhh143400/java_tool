<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ylz.springboot.oauth.dao.SysRoleUserMapper">

    <resultMap id="BaseResultMap" type="com.ylz.springboot.oauth.pojo.SysRoleUser">
        <id column="ID" property="id"/>
        <result column="ROLE_ID" property="roleId"/>
        <result column="USER_ID" property="userId"/>
        <result column="OPERATOR" property="operator"/>
        <result column="OPERATE_TIME" property="operateTime"/>
        <result column="OPERATE_IP" property="operateIp"/>
    </resultMap>

    <sql id="Base_Column_List">
        ID, ROLE_ID, USER_ID, OPERATOR, OPERATE_TIME, OPERATE_IP
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from SYS_ROLE_USER
        where ID = #{id}
    </select>

    <delete id="deleteByPrimaryKey">
        delete from SYS_ROLE_USER
        where ID = #{id}
    </delete>

    <insert id="insert">
        insert into SYS_ROLE_USER (ID, ROLE_ID, USER_ID, OPERATOR, OPERATE_TIME, OPERATE_IP)
        values (#{id}, #{roleId}, #{userId}, #{operator}, #{operateTime}, #{operateIp})
    </insert>

    <insert id="insertSelective">
        insert into SYS_ROLE_USER
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="roleId != null">
                ROLE_ID,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="operator != null">
                OPERATOR,
            </if>
            <if test="operateTime != null">
                OPERATE_TIME,
            </if>
            <if test="operateIp != null">
                OPERATE_IP,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="userId != null">
                #{userId},
            </if>
            <if test="operator != null">
                #{operator},
            </if>
            <if test="operateTime != null">
                #{operateTime},
            </if>
            <if test="operateIp != null">
                #{operateIp},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective">
        update SYS_ROLE_USER
        <set>
            <if test="roleId != null">
                ROLE_ID = #{roleId},
            </if>
            <if test="userId != null">
                USER_ID = #{userId},
            </if>
            <if test="operator != null">
                OPERATOR = #{operator},
            </if>
            <if test="operateTime != null">
                OPERATE_TIME = #{operateTime},
            </if>
            <if test="operateIp != null">
                OPERATE_IP = #{operateIp},
            </if>
        </set>
        where ID = #{id}
    </update>

    <update id="updateByPrimaryKey">
        update SYS_ROLE_USER
        set ROLE_ID = #{roleId},
          USER_ID = #{userId},
          OPERATOR = #{operator},
          OPERATE_TIME = #{operateTime},
          OPERATE_IP = #{operateIp}
        where ID = #{id}
    </update>

    <select id="getUserIdListByRoleId" resultType="string">
        SELECT USER_ID
        FROM SYS_ROLE_USER
        WHERE ROLE_ID = #{roleId}
    </select>

    <delete id="deleteByRoleId" parameterType="string">
        DELETE FROM SYS_ROLE_USER
        WHERE ROLE_ID = #{roleId}
    </delete>

    <delete id="deleteByUserId" parameterType="string">
        DELETE FROM SYS_ROLE_USER
        WHERE USER_ID = #{userId}
    </delete>

    <insert id="batchInsert" parameterType="map">
        INSERT INTO SYS_ROLE_USER
        (<include refid="Base_Column_List"/>)
        SELECT a.* FROM (
        <foreach collection="roleUserList" item="roleUser" separator="union" open="(" close=")">
            SELECT #{roleUser.id}, #{roleUser.roleId}, #{roleUser.userId}, #{roleUser.operator},
            #{roleUser.operateTime}, #{roleUser.operateIp} FROM dual
        </foreach>
        )a
    </insert>

    <select id="getRoleIdListByUserId" resultType="string">
        SELECT ROLE_ID
        FROM SYS_ROLE_USER
        WHERE USER_ID = #{userId}
    </select>
</mapper>